{"version":3,"sources":["webpack:///../docs/usage.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","Playground","Map","Search","provider","isMDXComponent"],"mappings":"6gBASO,IAAMA,EAAe,Q,gMAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,QAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,SADR,SAGA,oDAAmC,0BAAYC,WAAW,KAAvB,qBAAnC,6HACA,iBAAQ,CACN,GAAM,gCADR,gCAGA,0GACA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,sCAAyCC,SAAO,GACjFL,QACAH,kBACAS,eACAC,QACAC,YALiF,gBAMjFX,IANiF,EAOjFH,eAPiF,GAQhFO,QAAQ,cACb,YAAC,IAAD,CAAQQ,SAAS,gBAAgBR,QAAQ,YAEvC,uBAAK,sBAAMC,WAAW,OAAU,CAC5B,UAAa,gBADZ,kLAOL,iBAAQ,CACN,GAAM,6BADR,6BAGA,mCAAkB,0BAAYA,WAAW,KAAvB,oBAAlB,yEACA,4BAAW,mBAAGA,WAAW,KAAQ,CAC7B,KAAQ,qBADD,mBAAX,+DAGA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,mCAAsCC,SAAO,GAC9EL,QACAH,kBACAS,eACAC,QACAC,YAL8E,gBAM9EX,IAN8E,EAO9EH,eAP8E,GAQ7EO,QAAQ,cACb,YAAC,IAAD,CAAKQ,SAAS,gBAAgBR,QAAQ,SAEpC,uBAAK,sBAAMC,WAAW,OAAU,CAC5B,UAAa,gBADZ,oNAUL,iBAAQ,CACN,GAAM,WADR,WAGA,6EAA4D,0BAAYA,WAAW,KAAvB,UAA5D,wHACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,4Q,8LAiBTJ,EAAWY,gBAAiB","file":"component---docs-usage-mdx-0adc7390f4e04d0ae1eb.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/peter/code/missinglink/leaflet-geosearch/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport Playground from './components/Playground';\nimport Map from './components/Map';\nimport Search from './components/Search';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h1>\n    <p>{`There are two ways in which `}<inlineCode parentName=\"p\">{`leaflet-geosearch`}</inlineCode>{` can be used. Direct usage, for example for address forms, or embedded in a leaflet map to search for points of interest.`}</p>\n    <h2 {...{\n      \"id\": \"using-the-providers-directly\"\n    }}>{`Using the providers directly`}</h2>\n    <p>{`All providers can be used without leaflet. You might want to bind them to a form;`}</p>\n    <Playground __position={0} __code={'<Search provider=\\\"OpenStreetMap\\\" />'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Map,\n      Search,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Search provider=\"OpenStreetMap\" mdxType=\"Search\" />\n    </Playground>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import { OpenStreetMapProvider } from 'leaflet-geosearch';\n\nconst provider = new OpenStreetMapProvider();\nconst results = await provider.search({ query: input.value });\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"using-the-leaflet-control\"\n    }}>{`Using the leaflet control`}</h2>\n    <p>{`Or add the `}<inlineCode parentName=\"p\">{`GeoSearchControl`}</inlineCode>{` to the leaflet map instance, to render a search control on your map;`}</p>\n    <p>{`See `}<a parentName=\"p\" {...{\n        \"href\": \"/leaflet-control\"\n      }}>{`Leaflet Control`}</a>{` for more info about the the options this control provides.`}</p>\n    <Playground __position={1} __code={'<Map provider=\\\"OpenStreetMap\\\" />'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Map,\n      Search,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Map provider=\"OpenStreetMap\" mdxType=\"Map\" />\n    </Playground>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import { GeoSearchControl, OpenStreetMapProvider } from 'leaflet-geosearch';\n\nconst searchControl = new GeoSearchControl({\n  provider: new OpenStreetMapProvider(),\n});\n\nmap.addControl(searchControl);\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"results\"\n    }}>{`Results`}</h2>\n    <p>{`The search event of all providers return an array of `}<inlineCode parentName=\"p\">{`result`}</inlineCode>{` objects. The base structure is uniform between the providers. It contains objects matching the following interface:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`interface result {\n  x: number; // lon\n  y: number; // lat\n  label: string; // formatted address\n  bounds: [\n    [number, number], // south, west - lat, lon\n    [number, number], // north, east - lat, lon\n  ];\n  raw: any; // raw provider result\n}\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}