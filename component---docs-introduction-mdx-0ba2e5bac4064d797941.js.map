{"version":3,"sources":["webpack:///../docs/introduction.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","Link","Playground","Map","isMDXComponent"],"mappings":"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","file":"component---docs-introduction-mdx-0ba2e5bac4064d797941.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/peter/code/missinglink/leaflet-geosearch/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Link } from 'docz';\nimport Playground from './components/Playground';\nimport Map from './components/Map';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"introduction\"\n    }}>{`Introduction`}</h1>\n    <p><inlineCode parentName=\"p\">{`leaflet-geosearch`}</inlineCode>{` adds support for geocoding (address lookup, a.k.a. geoseaching) to your (web) application. It comes with controls to be embedded in your Leaflet map.`}</p>\n    <p>{`We support the following providers out-of-the-box; `}<a parentName=\"p\" {...{\n        \"href\": \"./providers/algolia\"\n      }}>{`Algolia`}</a>{`, `}<a parentName=\"p\" {...{\n        \"href\": \"./providers/bing\"\n      }}>{`Bing`}</a>{`, `}<a parentName=\"p\" {...{\n        \"href\": \"./providers/esri\"\n      }}>{`Esri`}</a>{`, `}<a parentName=\"p\" {...{\n        \"href\": \"./providers/google\"\n      }}>{`Google`}</a>{`, `}<a parentName=\"p\" {...{\n        \"href\": \"./providers/openstreetmap\"\n      }}>{`OpenStreetMap`}</a>{`, `}<a parentName=\"p\" {...{\n        \"href\": \"./providers/locationiq\"\n      }}>{`LocationIQ`}</a>{`, `}<a parentName=\"p\" {...{\n        \"href\": \"./providers/opencage\"\n      }}>{`OpenCage`}</a>{`.`}</p>\n    <p>{`Although this project is named `}<inlineCode parentName=\"p\">{`leaflet-geosearch`}</inlineCode>{`, this library is also usable without LeafletJS, and does not have any dependencies on Leaflet whatsoever.`}</p>\n    <Playground __position={0} __code={'<Map />'} __scope={{\n      props,\n      DefaultLayout,\n      Link,\n      Playground,\n      Map,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Map mdxType=\"Map\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"installation\"\n    }}>{`Installation`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`npm install leaflet-geosearch\n`}</code></pre>\n    <p>{`Include the CSS file somewhere. Where you do this depends a bit on your build pipeline.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import 'node_modules/leaflet-geosearch/dist/geosearch.css';\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"using-a-cdn\"\n    }}>{`Using a CDN`}</h2>\n    <p>{`To load `}<inlineCode parentName=\"p\">{`leaflet-geosearch`}</inlineCode>{` from a CDN instead of using a bundler take the following preparation steps:`}</p>\n    <p>{`Include the CSS file in the `}<inlineCode parentName=\"p\">{`head`}</inlineCode>{` section of your page:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`<link\n  rel=\"stylesheet\"\n  href=\"https://unpkg.com/leaflet-geosearch@3.0.0/dist/geosearch.css\"\n/>\n`}</code></pre>\n    <p>{`Include the JavaScript file before the closing `}<inlineCode parentName=\"p\">{`body`}</inlineCode>{` tag, if you're using it with the leaflet, make sure to include it `}<strong parentName=\"p\">{`after`}</strong>{` leaflet's javascript file`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`<!-- Make sure you put this AFtER leaflet.js, when using with leaflet -->\n<script src=\"https://unpkg.com/leaflet-geosearch@3.0.0/dist/geosearch.umd.js\"></script>\n`}</code></pre>\n    <p>{`Now you're ready to use the control or providers. Just remember that your \"import\" syntax will be a bit different from what the docs are using.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`// when the docs use an import:\nimport { OpenStreetMapProvider } from 'leaflet-geosearch';\nconst provider = new OpenStreetMapProvider();\n\n// you want to get it of the window global\nconst provider = new GeoSearch.OpenStreetMapProvider();\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h2>\n    <p>{`A basic working example would look like:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`// Either get GeoSearch from the window global, or import from \\`leaflet-geosearch\\`\n// import * as GeoSearch from 'leaflet-geosearch';\n\nconst map = L.map('map').setView([51.505, -0.09], 13);\n\nL.tileLayer('//{s}.tile.openstreetmap.org/{z}/{x}/{y}.png').addTo(map);\n\nconst search = new GeoSearch.GeoSearchControl({\n  provider: new GeoSearch.OpenStreetMapProvider(),\n});\n\nmap.addControl(search);\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"providers\"\n    }}>{`Providers`}</h2>\n    <p><inlineCode parentName=\"p\">{`leaflet-geosearch`}</inlineCode>{` uses so-called \"providers\" to take care of building the correct service URL and parsing the retrieved data into a uniform format. Thanks to this architecture, it is trivial to add your own providers, so you can use your own geocoding service.`}</p>\n    <p>{`When `}<a parentName=\"p\" {...{\n        \"href\": \"./providers/openstreetmap\"\n      }}><inlineCode parentName=\"a\">{`OpenStreetMap`}</inlineCode></a>{` does not match your needs; you can also choose to use the `}<a parentName=\"p\" {...{\n        \"href\": \"./providers/algolia\"\n      }}>{`Algolia`}</a>{`, `}<a parentName=\"p\" {...{\n        \"href\": \"./providers/bing\"\n      }}><inlineCode parentName=\"a\">{`Bing`}</inlineCode></a>{`, `}<a parentName=\"p\" {...{\n        \"href\": \"./providers/esri\"\n      }}><inlineCode parentName=\"a\">{`Esri`}</inlineCode></a>{`, `}<a parentName=\"p\" {...{\n        \"href\": \"./providers/google\"\n      }}><inlineCode parentName=\"a\">{`Google`}</inlineCode></a>{`, `}<a parentName=\"p\" {...{\n        \"href\": \"./providers/locationiq\"\n      }}><inlineCode parentName=\"a\">{`LocationIQ`}</inlineCode></a>{`, or `}<a parentName=\"p\" {...{\n        \"href\": \"./providers/opencage\"\n      }}><inlineCode parentName=\"a\">{`OpenCage`}</inlineCode></a>{` providers. Most of those providers do however require `}<inlineCode parentName=\"p\">{`API keys`}</inlineCode>{`. See the documentation pages on the relevant organisations on how to obtain these keys.`}</p>\n    <p>{`In case you decide to write your own provider, please consider submitting a PR to share your work with us.`}</p>\n    <p>{`Providers are unaware of any options you can give them. They are simple proxies to their endpoints. There is only one special property, and that is the `}<inlineCode parentName=\"p\">{`params`}</inlineCode>{` option. The difference being; that `}<inlineCode parentName=\"p\">{`params`}</inlineCode>{` will be included in the endpoint url. Being Often used for `}<inlineCode parentName=\"p\">{`API KEYS`}</inlineCode>{`, while the other attributes can be used for provider configuration.`}</p>\n    <h2 {...{\n      \"id\": \"browser-support--polyfills\"\n    }}>{`Browser support / Polyfills`}</h2>\n    <p>{`This project is written with the latest technologies in mind. Thereby it is required to include some polyfills when you wish to support older browsers. These polyfills are recommended for IE and Safari support:`}</p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://npm.im/babel-polyfill\"\n        }}>{`babel-polyfill`}</a>{`, for `}<inlineCode parentName=\"li\">{`array.includes`}</inlineCode>{` support.`}</li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://npm.im/unfetch\"\n        }}>{`unfetch`}</a>{`, for `}<inlineCode parentName=\"li\">{`fetch`}</inlineCode>{` requests.`}</li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}