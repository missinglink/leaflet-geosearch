{"version":3,"sources":["webpack:///../docs/providers/geoapifr.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","Playground","Map","provider","isMDXComponent"],"mappings":"igBAQO,IAAMA,EAAe,Q,6MAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,MAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,qBADR,qBAGA,qEAAoD,mBAAGC,WAAW,KAAQ,CACtE,KAAQ,6BADwC,cAApD,KAGA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,8BAAiCC,SAAO,GACzEL,QACAH,kBACAS,eACAC,SAJyE,gBAKzEV,IALyE,EAMzEH,eANyE,GAOxEO,QAAQ,cACb,YAAC,IAAD,CAAKO,SAAS,WAAWP,QAAQ,SAE/B,uBAAK,sBAAMC,WAAW,OAAU,CAC5B,UAAa,gBADZ,2PAeL,iBAAQ,CACN,GAAM,uBADR,uBAGA,wDAAuC,mBAAGA,WAAW,KAAQ,CACzD,KAAQ,oCAD2B,uBAAvC,2FAE4H,0BAAYA,WAAW,KAAvB,UAF5H,yBAGA,wDAAuC,0BAAYA,WAAW,KAAvB,UAAvC,oDACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,iZ,2MAiBTJ,EAAWW,gBAAiB","file":"component---docs-providers-geoapifr-mdx-1d73c85abe7475987963.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/peter/code/missinglink/leaflet-geosearch/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport Playground from '../components/Playground';\nimport Map from '../components/Map';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"geoapifr-provider\"\n    }}>{`GeoApiFr Provider`}</h1>\n    <p>{`For more options and configurations, see the `}<a parentName=\"p\" {...{\n        \"href\": \"https://geo.api.gouv.fr/\"\n      }}>{`Geo Api FR`}</a>{`.`}</p>\n    <Playground __position={0} __code={'<Map provider=\\\"GeoApiFr\\\" />'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Map,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Map provider=\"GeoApiFr\" mdxType=\"Map\" />\n    </Playground>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import { GeoApiFrProvider } from 'leaflet-geosearch';\n\nconst provider = new GeoApiFrProvider();\n\n// add to leaflet\nimport { GeoSearchControl } from 'leaflet-geosearch';\n\nmap.addControl(\n  new GeoSearchControl({\n    provider,\n  }),\n);\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"optional-parameters\"\n    }}>{`Optional parameters`}</h2>\n    <p>{`Geo Api FR supports a number of `}<a parentName=\"p\" {...{\n        \"href\": \"https://geo.api.gouv.fr/adresse\"\n      }}>{`optional parameters`}</a>{`. As the api requires those parameters to be added to the url, they can be added to the `}<inlineCode parentName=\"p\">{`params`}</inlineCode>{` key of the provider.`}</p>\n    <p>{`All options defined next to the `}<inlineCode parentName=\"p\">{`params`}</inlineCode>{` key, would have been added to the request body.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const provider = new OpenStreetMapProvider({\n  searchUrl: 'https://api-adresse.data.gouv.fr/search',\n  reverseUrl: 'https://api-adresse.data.gouv.fr/reverse',\n  params: {\n    type: 'municipality', // limit search results to city\n    autocomplete: 1, // Use in autocomplete mode (search in prefix mode)\n    lat: 0, // Latitude in degree\n    lon: 0, // Longitude in degree\n  },\n});\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}